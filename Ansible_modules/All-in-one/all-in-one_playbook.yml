- name: Configure Kube-adm master
  hosts: kube-masters
  become: true
  gather_facts: true
  vars:
    nodeip: var=ansible_eth0.ipv4.address
  roles:
    - role: kubeadm-master-role
      vars_files:
        - group_vars/all.yml

- name: Configure Kube-adm worker
  hosts: kube-workers
  become: true
  gather_facts: true
  roles:
    - name: kubeadm-worker-role 
      role: kubeadm-worker-role
      vars_files:
        - group_vars/all.yml

- hosts: kube-masters
  gather_facts: true
  become: true
  roles:
    - istio

- hosts: nfs-server
  gather_facts: yes
  become: yes
  roles:
   - name: Install NFS server
     role: nfs-role/server-nfs
     vars:
        nfs_exports:
          - path: "{{ nfs_server_export_dir }}"
            owner: root
            group: root
            mode: "0777"
            allow_from:
             - "{{ gvars_nfs_allowed_from_cidr }}"
          - path: "{{ nfs_server_export_dir2 }}"
            owner: root
            group: root
            mode: "0777"
            allow_from:
              - "{{ gvars_nfs_allowed_from_cidr }}"
- hosts: nfs-client
  gather_facts: yes
  become: yes
  roles:
   - name: Install NFS client software & create the fstab entry.
     role: nfs-role/client-nfs
     vars:
        nfs_client_remote_export: "{{ nfs_server_export_dir }}"
        nfs_client_share_mount_point: "{{ nfs_client_share_dir }}"
        nfs_host: "{{ hostvars[groups['nfs-server'][0]].ansible_eth0.ipv4.address }}"

- hosts: nfs-client
  gather_facts: yes
  become: yes
  roles:
   - name: Install NFS client software & create the fstab entry.
     role: nfs-role/client-nfs
     vars:
        nfs_client_remote_export: "{{ nfs_server_export_dir2 }}"
        nfs_client_share_mount_point: "{{ nfs_client_share_dir2 }}"
        nfs_host: "{{ hostvars[groups['nfs-server'][0]].ansible_eth0.ipv4.address }}"


- hosts: dbserver
  gather_facts: yes
  become: yes
  roles:
       - postgres
  vars:
     postgresql_allowed_cidr: "{{ gvars_postgres_allowed_from_cidr }}"


- name: Rabbitmq play
  hosts: kube-masters
  become: true
  gather_facts: true
  roles:
    - rabbitmq-role
  vars_files:
        - group_vars/all.yml
  vars: 
        ns_name: "{{ gvars_rabbitmq_namespace_name }}"

- hosts: kube-masters
  gather_facts: true
  become: true
  roles:
   - name: producer-app
     role: camel-apps
     vars_files:
        - group_vars/all.yml
     vars:
        application_yml_file: "deployment-producer.yml"


- hosts: kube-masters
  gather_facts: true
  become: true
  roles:
   - name: consumer-app
     role: camel-apps
     vars_files:
        - group_vars/all.yml
     vars:
        application_yml_file: "deployment-consumer.yml"
        postgres_ip: "{{ hostvars[groups['dbserver'][0]].ansible_eth0.ipv4.address }}"


- hosts: kube-masters
  gather_facts: true
  become: true
  roles:
   - name: kong
     role: kong
     vars_files:
        - group_vars/all.yml

- hosts: kube-masters
  gather_facts: true
  become: true
  roles:
   - name: metallb-role
     role: metallb
     vars:
        metallb_ip_range: "{{ metallb_ip_range_list }}"


- hosts: monitoring
  gather_facts: true
  become: true
  roles:
   - name: prometheus role
     role: prometheus
     vars_files:
        - group_vars/all.yml

- hosts: monitoring
  gather_facts: true
  become: true
  roles:
   - name: grafana role
     role: grafana
     vars_files:
       - group_vars/all.yml

#ELK playbook
- hosts: ELK
  gather_facts: yes
  become: yes
  remote_user: centos
  vars_files:
    - group_vars/all.yml

# Pre task Evalutavet the host machine is Redhat Family or Support YUM Package manager
  pre_tasks:
    - name: Check OS support
      fail:
        msg: The following OS family {{ ansible_os_family }} {{ ansible_architecture }} is not supported
      when: not ansible_os_family == "RedHat" or not ansible_architecture == "x86_64"

    - name: Check package manager support
      fail:
        msg: The following package manager {{ ansible_pkg_mgr }} is not supported
      when: not ansible_pkg_mgr == "yum"

# Install Java in the remote as java requried for all
  tasks:
    - name: Install openjdk
      yum:
        name: java-1.8.0-openjdk-headless
        state: present

    - name: Check/Install EPEL Repo
      yum: name={{epel_repo}}
        state=present


- hosts: ELK
  become: yes
  remote_user: centos
  vars_files:
    - group_vars/all.yml
  roles:
    - elastic

- hosts: ELK
  become: yes
  remote_user: centos
  vars_files:
    - group_vars/all.yml
  roles:
    - kibana

- hosts: ELK
  become: yes
  remote_user: centos
  vars_files:
    - group_vars/all.yml
  roles:
    - logstash

