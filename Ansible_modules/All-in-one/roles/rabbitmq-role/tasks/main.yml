#- include_tasks: delete-existing-resources.yml

- name: Check if namespace for RabbitMQ exists
  shell: "{{ cmd_path }} get namespace/{{ ns_name }}"
  ignore_errors: true
  register: if_namespace_present

- name: Create rabbitmq namespace
  shell: "{{ cmd_path }} create namespace {{ ns_name }}"
  when:
    - if_namespace_present.stderr != ""
    - if_namespace_present.stderr.find("NotFound") != -1
  ignore_errors: true

- name: To check if application_manifests folder exists
  stat:
    path: "{{ application_manifests }}"
  register: application_manifests_exists

- name: Create Application manifests folder
  shell: "mkdir {{ application_manifests }}"
  when:
     - not application_manifests_exists.stat.exists 

- name: Copy PV YAML file to K8 master
  template:
    src: "{{ item }}.j2"
    dest: "{{ application_manifests }}/{{ item }}"
    mode: 0755
  with_items:
        - pv.yml

- name: Copy Rabbitmq manifest YAML files to K8 master
  copy:
    src: "{{ item }}"
    dest: "{{ application_manifests }}/{{ item }}"
    mode: 0755
  with_items:
        - creating-rbac.yml
        - pvc.yml
        - stateful-set.yml
        - service.yml

- name: Deploy Application from kubernetes file
  shell: "{{ cmd_path }} apply -f {{ application_manifests }}/creating-rbac.yml -f {{ application_manifests }}/pv.yml -f {{ application_manifests }}/pvc.yml -f {{ application_manifests }}/stateful-set.yml -f {{ application_manifests }}/service.yml"
  #with_items: ['creating-rbac.yml', 'pv.yml', 'pvc.yml', 'stateful-set.yml', 'service.yml']
  ignore_errors: true

- pause:
    prompt: "Please hold on while we deploy your RabbitMQ environment and bring it up before deploying applications"
    seconds: 15
